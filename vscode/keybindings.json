// 既定値を上書きするには、このファイル内にキー バインドを挿入しますauto[]
[
    {
        "key": "ctrl+shift+alt+up",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.focus",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+shift+t",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+shift+d",
        "command": "explorer.newFolder"
    },
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+alt+j",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+shift+alt+enter",
        "command": "github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated"
    },
    {
        "key": "ctrl+shift+oem_2",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k p",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k p",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+shift+alt+enter ctrl+shift+alt+enter",
        "command": "extension.openPrGitProvider"
    },
    {
        "key": "ctrl+l p",
        "command": "-extension.openPrGitProvider"
    },
    {
        "key": "ctrl+shift+k ctrl+shift+enter",
        "command": "extension.openInGitHub"
    },
    {
        "key": "ctrl+l g",
        "command": "-extension.openInGitHub"
    },
    {
        "key": "ctrl+shift+alt+d ctrl+shift+alt+d",
        "command": "extension.copyGitHubLinkToClipboard"
    },
    {
        "key": "ctrl+l c",
        "command": "-extension.copyGitHubLinkToClipboard"
    },
    {
        "key": "ctrl+shift+up",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocus"
    },
    {
        "key": "shift+pageup",
        "command": "-workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+shift+down",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "-workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p right",
        "command": "workbench.action.alignPanelLeft"
    },
    {
        "key": "ctrl+shift+alt+l",
        "command": "workbench.action.positionPanelRight"
    },
    {
        "key": "ctrl+shift+alt+k",
        "command": "workbench.action.positionPanelBottom"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "shift+alt+l",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+oem_comma",
        "command": "workbench.action.openApplicationSettingsJson"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "alt+oem_2",
        "command": "-gitlens.gitCommands",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "workbench.action.quickOpenWithModes"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "workbench.action.duplicateActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k l",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+j ctrl+j",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-workbench.action.toggleDevTools",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+shift+i",
        "command": "extension.insertIncludeGuard"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    }
]