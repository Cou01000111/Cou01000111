// 既定値を上書きするには、このファイル内にキー バインドを挿入しますauto[]
[
    // util
    {
        "key": "cmd+shift+oem_comma",
        "command": "workbench.action.openApplicationSettingsJson"
    },
    //// layer oem_1
    {
        "key": "cmd+oem_1 ctrl+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "cmd+oem_1 ctrl+c",
        "command": "aichat.newchataction"
    },
    {
        "key": "cmd+oem_1 ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+oem_1 ctrl+w",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "cmd+oem_1 ctrl+oem_comma",
        "command": "editor.emmet.action.wrapWithAbbreviation"
    },
    //// close window
    {
        "key": "cmd+q",
        "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "cmd+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "cmd+q",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "cmd+h",
        "command": "workbench.action.positionPanelRight",
        "when": "panelPosition=='bottom' && terminalFocus && terminalHasBeenCreated"
    },
    {
        "key": "cmd+h",
        "command": "workbench.action.positionPanelBottom",
        "when": "panelPosition=='right' && terminalFocus && terminalHasBeenCreated"
    },
    //// redo/undo
    {
        "key": "cmd+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+z",
        "command": "undo"
    },
    {
        "key": "cmd+shift+z",
        "command": "-redo"
    },
    //// smart select ctrl + l
    {
        "key": "cmd+l",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+l",
        "command": "-aichat.newchataction"
    },
    {
        "key": "cmd+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused"
    },
    {
        "key": "cmd+shift+l",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorHasSelection && editorTextFocus"
    },
    //// quicks
    ////// search
    {
        "key": "cmd+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "cmd+shift+f",
        "command": "workbench.action.quickTextSearch"
    },
    ////// quick open
    {
        "key": "cmd+k",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+k ctrl+oem_comma",
        "command": "-editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    ////// command
    {
        "key": "cmd+oem_period",
        "command": "workbench.action.showCommands"
    },
    ////// symbols
    {
        "key": "cmd+3",
        "command": "workbench.action.showAllSymbols"
    },
    // move
    //// layout
    {
        "key": "cmd+shift+alt+up",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "cmd+shift+alt+down",
        "command": "-cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    //// terminal focus
    {
        "key": "cmd+t",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus"
    },
    //// focus window
    {
        "key": "cmd+alt+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+alt+j",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    // edit
    //// on file explorer
    {
        "key": "cmd+n",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus"
    },
    {
        "key": "cmd+d",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus"
    },
    {
        "key": "cmd+w",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "filesExplorerFocus"
    },
    //// on editor
    {
        "key": "cmd+shift+p",
        "command": "workbench.action.toggleZenMode",
    },
    {
        "key": "cmd+oem_7",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+shift+alt+enter",
        "command": "github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated"
    },
    {
        "key": "cmd+shift+oem_2",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "cmd+right",
        "command": "cursorWordPartRight",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+left",
        "command": "cursorWordPartLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+shift+d",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+shift+oem_5",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    ////// pin
    {
        "key": "cmd+p",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    ////// ctrl+tab
    {
        "key": "cmd+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "cmd+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "cmd+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    ////// jumpy
    {
        "key": "cmd+j",
        "command": "extension.jumpy-exit",
        "when": "editorTextFocus && jumpy.isInJumpMode"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    ////// build
    {
        "key": "cmd+b",
        "command": "workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    ////// bookmark
    {
        "key": "cmd+shift+b",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+shift+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    //// on terminal
    {
        "key": "shift+pageup",
        "command": "-workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+shift+down",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "-workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+alt+j",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+alt+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+n",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    // 重複キー無効化
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    // disable unused keys
    {
        "key": "cmd+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "cmd+oem_period",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "cmd+9",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    }
    ,{"key": "cmd+right", "command": "workbench.action.navigateForward"}
    ,{"key": "cmd+left", "command": "workbench.action.navigateBack"}
]
